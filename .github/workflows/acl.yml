name: Update CloudFront IPs in EC2 Security Group

on:
  schedule:
    - cron: "0 0 * * *"  # 매일 자정(UTC)
  workflow_dispatch:

jobs:
  update-sg:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Validate Security Group ID
        run: |
          if [[ ! $SECURITY_GROUP_ID =~ ^sg-[0-9a-fA-F]{8,17}$ ]]; then
            echo "❌ SECURITY_GROUP_ID is invalid: $SECURITY_GROUP_ID"
            exit 1
          fi
        env:
          SECURITY_GROUP_ID: ${{ secrets.CLOUDFRONT_SG_ID }}

      - name: Fetch CloudFront IP ranges
        run: |
          curl -s https://d7uri8nf7uskq.cloudfront.net/tools/list-cloudfront-ips \
            -o cloudfront-ips.json
          echo "Downloaded CloudFront IP list"

      - name: Merge and deduplicate IPs
        run: |
          jq -r '[.CLOUDFRONT_GLOBAL_IP_LIST[], .CLOUDFRONT_REGIONAL_EDGE_IP_LIST[]] | unique[]' cloudfront-ips.json > merged-ips.txt
          echo "Total unique CloudFront IPs: $(wc -l < merged-ips.txt)"

      - name: Update Security Group safely
        env:
          SECURITY_GROUP_ID: ${{ secrets.CLOUDFRONT_SG_ID }}
          MAX_RULES: 60
        run: |
          echo "Revoking existing CloudFront IP rules..."
          EXISTING_RULES=$(aws ec2 describe-security-groups --group-ids "$SECURITY_GROUP_ID" \
            --query 'SecurityGroups[0].IpPermissions[?FromPort==`443` && ToPort==`443` && IpProtocol==`tcp`].IpRanges[].CidrIp' \
            --output text)

          if [ -n "$EXISTING_RULES" ]; then
            for ip in $EXISTING_RULES; do
              aws ec2 revoke-security-group-ingress \
                --group-id "$SECURITY_GROUP_ID" \
                --protocol tcp --port 443 \
                --cidr "$ip" || true
            done
          fi

          # 최대 규칙 수만큼만 추가
          TOTAL_IPS=$(wc -l < merged-ips.txt)
          if [ "$TOTAL_IPS" -gt "$MAX_RULES" ]; then
            echo "⚠ Total IPs ($TOTAL_IPS) exceed MAX_RULES ($MAX_RULES), only first $MAX_RULES will be applied."
          fi

          COUNT=0
          while read ip; do
            if [ "$COUNT" -ge "$MAX_RULES" ]; then
              echo "Skipping remaining IPs due to SG rule limit"
              break
            fi
            aws ec2 authorize-security-group-ingress \
              --group-id "$SECURITY_GROUP_ID" \
              --protocol tcp --port 443 \
              --cidr "$ip" || true
            COUNT=$((COUNT+1))
          done < merged-ips.txt

          echo "✅ Security group updated successfully with $COUNT IP rules"
